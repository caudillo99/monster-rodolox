{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monsters","id","name","email","CardList","map","monster","SearchBox","placeholder","handleOnChange","onChange","type","App","handleChange","e","setState","searchField","target","value","state","fetch","then","response","json","users","catch","err","console","log","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gUAWeA,EATF,SAACC,GACX,OACG,sBAAKC,UAAU,iBAAf,UACG,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,SAASC,GAAzC,4BACtB,6BAAKL,EAAMI,SAASE,OACpB,4BAAIN,EAAMI,SAASG,YCJfC,G,MAAW,SAACR,GAEtB,OACG,qBAAKC,UAAY,YAAjB,SACID,EAAMI,SAASK,KAAI,SAAAC,GACjB,OAAO,cAAC,EAAD,CAAuBN,SAAUM,EAAjC,cAAWA,EAAQL,WCAvBM,G,MANG,SAAC,GAAkC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,eAC9B,OACG,uBAAOZ,UAAU,SAASW,YAAaA,EAAaE,SAAYD,EAAiBE,KAAK,aC0C7EC,E,kDAtCZ,aAAc,IAAD,8BACV,gBAcHC,aAAe,SAACC,GACb,EAAKC,SAAU,CAACC,YAAYF,EAAEG,OAAOC,SAdrC,EAAKC,MAAQ,CACVnB,SAAS,GACTgB,YAAY,IAJL,E,qDAQb,WAAoB,IAAD,OAChBI,MAAM,8CACLC,MAAM,SAAAC,GAAQ,OAAIA,EAASC,UAC3BF,MAAM,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACf,SAASwB,OACvCC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,Q,oBAO7B,WAAS,IAAD,EAC2BG,KAAKV,MAA9BnB,EADF,EACEA,SAAUgB,EADZ,EACYA,YACXc,EAAmB9B,EAAS+B,QAAO,SAAAzB,GAAO,OAC7CA,EAAQJ,KAAK8B,cAAcC,SAASjB,EAAYgB,kBAGnD,OACG,sBAAKnC,UAAU,MAAf,UACA,iDACG,cAAC,EAAD,CACGW,YAAY,iBACZC,eAAkBoB,KAAKhB,eAE1B,cAAC,EAAD,CAAUb,SAAY8B,W,GAjChBI,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9b117f54.chunk.js","sourcesContent":["import React from 'react'\r\nimport './card.style.css'\r\nconst Card = (props) => {\r\n   return (\r\n      <div className=\"card-container\">\r\n         <img alt=\"monster\" src={`https://robohash.org/${props.monsters.id}?set=set2&size=180x180`}/>\r\n         <h2>{props.monsters.name}</h2>\r\n         <p>{props.monsters.email}</p>\r\n      </div>\r\n   );\r\n}\r\nexport default Card;","import React from 'react';\r\nimport Card from '../card/card.component'\r\nimport \"./card-list.style.css\"\r\nexport const CardList = (props) => {\r\n\r\n   return( \r\n      <div className = \"card-list\">\r\n         {props.monsters.map(monster => {\r\n            return(<Card key={monster.id} monsters={monster}> </Card>)}\r\n         )}\r\n      </div>\r\n   );\r\n}","import React from 'react'\r\nimport \"./search-box.style.css\"\r\nconst SearchBox = ({placeholder, handleOnChange}) =>{\r\n   return ( \r\n      <input className=\"search\" placeholder={placeholder} onChange = {handleOnChange } type=\"search\"/>\r\n   )\r\n}\r\n\r\nexport default SearchBox;","import React, { Component } from 'react';\nimport \"./App.css\"\n/* import {Card} from './components/card/card.component.jsx'; */\nimport {CardList} from \"./components/card-list/card-list.component.jsx\"\nimport SearchBox from \"./components/search-box/search-box.component.jsx\"\nimport './App.css';\n\nclass App extends Component {\n   constructor(){\n      super();\n      this.state = {\n         monsters:[],\n         searchField:''\n      }\n   }\n\n   componentDidMount(){\n      fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then( response => response.json() ) /* converting the response into json format */\n      .then( users => this.setState({monsters:users}))\n      .catch(err => console.log(err));\n   }\n\n   handleChange = (e) => {\n      this.setState( {searchField:e.target.value} );\n   }\n\n   render(){\n      const {monsters, searchField} = this.state;\n      const filteredMonsters = monsters.filter(monster => \n         monster.name.toLowerCase().includes(searchField.toLowerCase())\n      );\n\n      return (\n         <div className=\"App\">\n         <h1>Monster Rolodox</h1>\n            <SearchBox \n               placeholder=\"Search monster\" \n               handleOnChange = {this.handleChange}\n            />\n            <CardList monsters = {filteredMonsters}/>\n         </div>\n      ); \n   }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}